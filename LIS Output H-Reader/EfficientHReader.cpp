#include <fstream>
#include <sstream>
#include <iostream>
#include <string>

//Description: This program reads the G Section of a .lis file generated by Curves5.3
//Arguments: Name of file with List of Name [1], Number of LIS files [2], and name of CSV to write [3] 
//Example: g++ -c GReader.cpp -o THIS_IS_A_FILE.lis (?)
//LAST UPDATED: 03/01/2021 at 12:50pm

//Constants
const size_t STRAND_NUM = 4;
const size_t PAIR_NUM = 2;
const size_t PARAM_NUM = 6;

//Additional Functions
void PrintToCSV(std::stringstream &Line, std::fstream & MyCSV);

int main(int argc, char* argv[])
{
	//Initialize Variables 
	std::fstream LisList, LIS, MyCSVFile;
	const size_t LIS_AMOUNT = std::stoi(std::string(argv[2]));
	std::string Line;

	//Open Files
	LisList.open(argv[1], std::ios::in);
	MyCSVFile.open(argv[3], std::ios::out);

	//PART 1: First extract streampos from 1 to use from the rest!

	//Read information
	for (int i = 0 ; i < LIS_AMOUNT ; ++i)
	{
	std::getline(LisList,Line);
	LIS.open(Line, std::ios::in);

	if (LIS.is_open())
	{
		//Find the section with |G|
		while (Line.find("|H|") == std::string::npos)
		{
			std::getline(LIS, Line);
		}

		//Loop 3 times since the data is between strands
		for (size_t i = 0; i < STRAND_NUM - 1 ; i++)
		{
			//Jump to line before info
			size_t jump = (i == 0) ? 7 : 8 ; 

			for (size_t i = 0; i < jump ; i++)
			{
				std::getline(LIS, Line);
			}
			//Read info lines
			for (size_t i = 0; i < PAIR_NUM; i++)
			{
				std::getline(LIS, Line);
				MyCSVFile << Line.substr(16,std::string::npos) << std::endl;
			}
		}
	}

	LIS.close();

	}
         
	LisList.close();
	MyCSVFile.close();
	return 0;
}

void PrintToCSV(std::stringstream &Line, std::fstream &MyCSV)
{
	float num;
	for (size_t i = 0; i < PARAM_NUM; i++)
	{
		Line >> num;
		MyCSV << num << ",";
	}
	MyCSV << std::endl;
}
